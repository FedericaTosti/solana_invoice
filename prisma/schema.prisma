// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts Account[]
  invoices Invoice[]
}

model Account {
  id                Int    @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refreshToken      String?
  accessToken       String?
  expiresAt         Int?
  tokenType         String?
  scope             String?
  idToken           String?
  sessionState      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Invoice {
  id             Int         @id @default(autoincrement())
  userId         Int
  streetFrom     String
  cityFrom       String
  postCodeFrom   String
  countryFrom    String
  clientName     String
  clientEmail    String
  streetTo       String
  cityTo         String
  postCodeTo     String
  countryTo      String
  invoiceDate    DateTime
  paymentTerm    PaymentTerm @default(NET1)
  description    String
  total          String
  status         Status      @default(PENDING)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  items Item[]
}

model Item {
  id        Int    @id @default(autoincrement())
  invoiceId Int
  name      String
  quantity  String
  price     String
  total     String

  invoice Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
}

enum Status {
  PAID
  PENDING
  DRAFT
}

enum PaymentTerm {
  NET1
  NET7
  NET14
  NET30
}
